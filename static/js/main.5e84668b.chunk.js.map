{"version":3,"sources":["comp/card/card.compo.js","comp/car-list/CardList.js","comp/Search/Searchbox.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","height","width","name","email","CardList","monsters","map","Searchbox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","res","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAIe,SAASA,EAAKC,GACzB,OACI,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,aAAuDC,OAAO,MAAMC,MAAM,QAC7F,mCAAOP,EAAMI,QAAQI,KAArB,OACA,4BAAIR,EAAMI,QAAQK,W,UCIdC,EAVG,SAACV,GACf,OACI,qBAAKC,UAAU,YAAf,SACED,EAAMW,SAASC,KAAI,SAAAR,GAAO,OAEpB,cAACL,EAAD,CAAuBK,QAASA,GAArBA,EAAQC,UCLtBQ,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OAErB,uBACCd,UAAU,SACVe,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCmCAG,E,kDArCb,aAAc,IAAD,8BACX,gBAEKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IALJ,E,gEASQ,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAU,CAACf,SAAUc,S,+BAIpC,IAAD,SAC0BE,KAAKR,MAA/BR,EADA,EACAA,SAAUS,EADV,EACUA,YACZQ,EAAmBjB,EAASkB,QAAO,SAAAzB,GAAO,OAC9CA,EAAQI,KAAKsB,cAAcC,SAASX,EAAYU,kBAClD,OACE,sBAAK7B,UAAU,MAAf,UACA,gDACA,cAAC,EAAD,CACAa,YAAY,wBACZC,aAAc,SAAAiB,GACZ,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,WAKzC,cAAC,EAAD,CAAUvB,SAAUiB,W,GAhCLO,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5e84668b.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./style.css\"\r\n\r\n\r\nexport default function Card(props) {\r\n    return (\r\n        <div className=\"card-container\">\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2`} height=\"180\" width=\"180\"/>\r\n           <h1 > {props.monster.name} </h1>    \r\n           <p>{props.monster.email}</p>         \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Card from '../card/card.compo';\r\nimport \"./cardlist.css\"\r\nconst  CardList = (props) => {\r\n    return (\r\n        <div className=\"card-list\">\r\n        { props.monsters.map(monster =>\r\n            (\r\n                <Card key={monster.id }monster={monster}/>\r\n            )) }\r\n        </div>\r\n    )\r\n}\r\nexport default CardList;","import React from 'react';\r\nimport \"../Search/search.styles.css\";\r\n\r\nexport const Searchbox = ({placeholder, handleChange}) =>\r\n(\r\n    <input\r\n     className=\"search\"\r\n     type=\"search\" \r\n     placeholder={placeholder}\r\n     onChange={handleChange}  />\r\n)\r\n  ","import './App.css';\nimport { Component } from 'react';\nimport CardList from './comp/car-list/CardList';\nimport { Searchbox } from './comp/Search/Searchbox';\n\n\nclass App extends Component{\n  constructor(){\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: \"\"\n      };\n  }\n\n  componentDidMount() {\n    fetch(`https://jsonplaceholder.typicode.com/users`)\n      .then(res => res.json())\n      .then(users => this.setState( {monsters: users}));;\n  }\n\n\nrender () {\n  const { monsters, searchField } = this.state;\n  const filteredMonsters = monsters.filter(monster => \n    monster.name.toLowerCase().includes(searchField.toLowerCase()))\n  return (\n    <div className='App'>\n    <h1>Monster Roller</h1>\n    <Searchbox \n    placeholder=\"ðŸ”Ž monsters\"\n    handleChange={e => {\n      this.setState({ searchField: e.target.value})\n    }}\n    />\n\n\n   <CardList monsters={filteredMonsters}/>\n    </div>\n  );\n};\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}